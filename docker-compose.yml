version: '3.7'

services:
  main:
    container_name: ta_main
    build:
      context: .
      target: development
    command: npm run start:dev
    environment:
      MONGO_HOST: ${MONGO_HOST}
      MONGO_PORT: ${MONGO_PORT}
      MONGO_USER: ${MONGO_USERNAME}
      MONGO_PASS: ${MONGO_PASSWORD}
      MONGO_DB: ${MONGO_DATABASE}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
    depends_on:
      - mongo
      - redis
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
      - 9229:9229
    entrypoint: ["npm", "run", "start:${NODE_ENV}"]
    env_file:
      - .env
    networks:
      - ta_net
    restart: unless-stopped

  redis:
    image: redis:6.0
    #    image: redis:6.0-alpine
    restart: always
    container_name: ta_redis
    command: --appendonly yes
    volumes:
      - redis:/data
    env_file:
      - .env
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    networks:
      - ta_net

  mongo:
    image: mongo
    container_name: ta_mongo
    restart: always
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    volumes:
      - mongo:/data/db
    networks:
      - ta_net

  mongo-express:
    image: mongo-express
    container_name: ta_mongo-express
    restart: always
    ports:
      - 8081:8081
    depends_on:
      - mongo
    env_file:
      - .env
    environment:
      ME_CONFIG_MONGODB_PORT: ${MONGO_PORT}
      ME_CONFIG_MONGODB_SERVER: ${MONGO_HOST}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
    networks:
      - ta_net
networks:
  ta_net:
volumes:
  mongo:
  redis: